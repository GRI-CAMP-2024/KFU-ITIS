/*

0. Будет ли Выполнен такой код:
cube(2);
const cube = function(n) {return Math.pow(n, 3)}
Приложите свой комментарий!

1. Область видимости функций!
let num = 5
function Increase() {
    let num = 5
    return ++num
}
Increase()
console.log(num)

2. Напишите функцию, принимающую аргументом положительное число либо ноль и возвращающая факториал этого числа

3. Напищите функцию-калькулятор, принимающую 3 параметра: два числовых значения и строку-оператор
Оператор может быть одним из 6 базовых в JavaScript: *, /, **, -, +, %
Калькулятор, в зависимости от оператора производит арифметическое действие с переданными числами
Для реализации - используйте SWITCH-CASE

4. Практикуем стрелочные функции (arrow functions)
Напишите 4 функции, возвращающие:
- максимальное значение среди всех переданных аргументов 
- минимальное значение среди всех переданных аргументов
- модуль переданного аргумента
- рандомное целое число в диапазоне от 10 до 100 (не включая 100)
Используйте краткий соврменный синтаксис, каждая ф-ция должна быть записана в 1 строку! 

5. Напишите функции, принимающую строку и вычисляющую итоговую сумму всех символов строки по их весу. Вес символа определяется числовым значением Юникода этого символа.
Для определения значения Юникода юзайте метод  i.codePointAt(ind), где ind - индекс символа, i - сам символ.
!!Помните, что строку можно посимвольно обойти в цикле и строка обладает свойством длины:length

6. Напишите функцию, проверяющую передаваемый аргумент на принадлежность к объекту. Принимает 1 аргумент.

*/

function Factorial(num) {
  if (num <= 1) return 1;
  for (let i = num; i > 1; i--) {
    num *= i - 1;
  }
  return num;
}

const rand = () => console.log(Math.floor(Math.random() * 90) + 10);

function getStringSymbolsSum(str) {
  let summ = 0;

  for (const s of str) {
    summ += s.codePointAt(0);
  }
  console.log(summ);
}

getStringSymbolsSum("Hello");

function isObject(n) {
  if (typeof n === "object" && n !== null && !Array.isArray(n)) return true;
  return false;
}

console.log(isObject(new Map([["name", "Alex"]])));
